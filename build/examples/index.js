import { __awaiter } from "tslib";
import axios from 'axios';
import { v1 as uuidV1 } from 'uuid';
// import { ENV } from '../common/config';
import { getMessenger } from '../index';
import { localStg } from '../utils';
const baseURL = 'http://localhost:7000';
const localUid = localStg.get('messengerDeviceUid');
const uid = localUid ? localUid : uuidV1();
localStg.set('messengerDeviceUid', uid);
const chatId = '66cc25d3c1875cfa0dddfa20'; // ! rm
const apiKey = 'qalqon';
const apiHash = '66b3576d917425b29a3e3644';
const messenger = getMessenger({
    baseURL,
    apiKey,
    apiHash,
    languageGetter() {
        return 'Uz-Latin';
    },
    token: () => __awaiter(void 0, void 0, void 0, function* () {
        const token = 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoyMDA5LCJ1c2VybmFtZSI6IlVtYXJiZWsiLCJmdWxsX25hbWUiOiJBS0JBUk9WIFVNQVIiLCJwaG9uZV9udW1iZXIiOiIrOTk4OTQ1NDM0NTY3IiwiZ3JvdXAiOnsiaWQiOjIsIm5hbWUiOiJBZG1pbiIsImFjY2Vzc2VzIjpbM119LCJvcmdhbml6YXRpb25faWQiOm51bGwsInNlcnZpY2VzIjpbeyJpZCI6MiwibmFtZSI6Im50ZmFjZSIsInN0YXR1cyI6dHJ1ZX0seyJpZCI6NiwibmFtZSI6InhhdGxvdiIsInN0YXR1cyI6dHJ1ZX0seyJpZCI6MTQsIm5hbWUiOiJlbWVobW9uIiwic3RhdHVzIjp0cnVlfSx7ImlkIjoxNiwibmFtZSI6ImF1dG8tdHJhbnNwb3J0Iiwic3RhdHVzIjp0cnVlfSx7ImlkIjoxOCwibmFtZSI6ImFjY2lkZW50cyIsInN0YXR1cyI6dHJ1ZX0seyJpZCI6MjAsIm5hbWUiOiJkaGEiLCJzdGF0dXMiOnRydWV9LHsiaWQiOjIxLCJuYW1lIjoiZm9ybWExIiwic3RhdHVzIjp0cnVlfSx7ImlkIjoyMiwibmFtZSI6Iml2c3MtbWFuYWdlciIsInN0YXR1cyI6dHJ1ZX0seyJpZCI6MjcsIm5hbWUiOiJxdWljay1zZWFyY2giLCJzdGF0dXMiOnRydWV9LHsiaWQiOjI5LCJuYW1lIjoiY2FtZXJhIiwic3RhdHVzIjp0cnVlfSx7ImlkIjozMCwibmFtZSI6ImZ2diIsInN0YXR1cyI6dHJ1ZX0seyJpZCI6MzEsIm5hbWUiOiJncHMiLCJzdGF0dXMiOnRydWV9LHsiaWQiOjMyLCJuYW1lIjoic2F5bG92Iiwic3RhdHVzIjp0cnVlfSx7ImlkIjozNCwibmFtZSI6Imxpc3RlZC1wZW9wbGUiLCJzdGF0dXMiOnRydWV9LHsiaWQiOjM2LCJuYW1lIjoidGFkYmlyIiwic3RhdHVzIjp0cnVlfSx7ImlkIjozOCwibmFtZSI6Im10cCIsInN0YXR1cyI6dHJ1ZX0seyJpZCI6NDAsIm5hbWUiOiJjcmltZSIsInN0YXR1cyI6dHJ1ZX0seyJpZCI6NDEsIm5hbWUiOiJjYXIiLCJzdGF0dXMiOnRydWV9LHsiaWQiOjQyLCJuYW1lIjoib3BnIiwic3RhdHVzIjp0cnVlfSx7ImlkIjo0MywibmFtZSI6Im1pYiIsInN0YXR1cyI6dHJ1ZX0seyJpZCI6NDQsIm5hbWUiOiJzZXJ2aWNlIiwic3RhdHVzIjp0cnVlfSx7ImlkIjo0NSwibmFtZSI6Im5vdGlmaWNhdGlvbnMiLCJzdGF0dXMiOnRydWV9LHsiaWQiOjQ2LCJuYW1lIjoidGVlbmFnZXJzIiwic3RhdHVzIjp0cnVlfSx7ImlkIjo0NywibmFtZSI6ImJ1cy1wYXJraW5nIiwic3RhdHVzIjp0cnVlfSx7ImlkIjo0OCwibmFtZSI6ImRldGVjdG9yIiwic3RhdHVzIjp0cnVlfSx7ImlkIjo0OSwibmFtZSI6ImFkZC1jYW1lcmEiLCJzdGF0dXMiOnRydWV9LHsiaWQiOjUwLCJuYW1lIjoiaXZzcy1jb250cm9sIiwic3RhdHVzIjp0cnVlfSx7ImlkIjo1MSwibmFtZSI6IjV0YXNoYWJidXMiLCJzdGF0dXMiOnRydWV9LHsiaWQiOjUyLCJuYW1lIjoibG9nZ2VyIiwic3RhdHVzIjp0cnVlfSx7ImlkIjo1MywibmFtZSI6InNjbyIsInN0YXR1cyI6dHJ1ZX0seyJpZCI6NTQsIm5hbWUiOiJsYW5ndWFnZSIsInN0YXR1cyI6dHJ1ZX0seyJpZCI6NTUsIm5hbWUiOiJzdXBlcnZpc29yIiwic3RhdHVzIjp0cnVlfSx7ImlkIjo1NywibmFtZSI6Im15LWluc3BlY3RvciIsInN0YXR1cyI6dHJ1ZX0seyJpZCI6NTksIm5hbWUiOiJib2R5LWNhbWVyYSIsInN0YXR1cyI6dHJ1ZX0seyJpZCI6NjAsIm5hbWUiOiJlbWlncmFudCIsInN0YXR1cyI6dHJ1ZX1dLCJkaXN0cmljdElkIjpudWxsLCJoYXNoIjoiNWE5NzA3MDg4ZDNmMzJiNjY1ZDQ2NGY1YmY0N2M2YzAifSwiaWF0IjoxNzI0NjU0Mzg5LCJleHAiOjE3MjQ3NDA3ODl9.qiVN8V5xdSYknXHReqIV8ZTuMxqeSUpswP-0YSlsjrM';
        const { data } = yield axios.create({ baseURL }).get(`/v1/auth/me-from?token=${token}`, {
            headers: {
                Authorization: `Basic ${btoa(`${apiKey}:${apiHash}`)}`,
            },
        });
        return {
            access: data.data.token.accessToken,
            refresh: data.data.token.refreshToken,
        };
        // const res = await axios.post(
        //   `${baseURL}/v1/auth/login`,
        //   {
        //     username: 'Umarkhan', // Adhamjon, Umarkhan
        //     password: '123',
        //   },
        //   {
        //     headers: requiredHeaders,
        //   },
        // );
        // return {
        //   access: res.data.data.token.accessToken,
        //   refresh: res.data.data.token.refreshToken,
        // };
    }),
    polling: { interval: 5000, limit: 100 },
});
console.log('Success started');
messenger
    .on('connect', (...args) => {
    console.log('connected', args);
})
    .on('reconnect_attempt', (...args) => {
    console.log('reconnect_attempt', args);
})
    .on('reconnect', (...args) => {
    console.log('reconnect', args);
})
    .on('disconnect', ({ reason, details }) => {
    console.log('disconnect', reason);
})
    .on('pong', () => {
    console.log('pong');
})
    .on('update', (data) => {
    console.log(data._id, 'update');
})
    .on('chatAction', (action) => {
    console.log(action, 'chatAction');
});
const getRadomNumber = (from, to) => from + Math.round(Math.random() * (to - from));
setInterval(() => __awaiter(void 0, void 0, void 0, function* () {
    let message;
    const random = getRadomNumber(0, 100);
    // const random = 3;
    if (random % 2 === 0) {
        message = {
            messageType: 'text',
            to: { chatType: 'private', chatId: chatId },
            text: `Test xabar ${Math.random() * 100}. Time: ${new Date().toISOString()}`,
        };
    }
    else {
        const wanted = {
            type: 'user',
            title: 'MVD-Qidiruv',
            databaseName: 'MVD-Qidiruv',
            pUser: {
                image: 'http://localhost:3000/v1/files/profile_photos/d1df88dc-62b6-4ba7-9a5f-9669be9040a3.JPEG',
                // fullImage: 'http://localhost:3000/v1/files/profile_photos/d1df88dc-62b6-4ba7-9a5f-9669be9040a3.JPEG',
                fullName: 'Qambarov Qumriniso Qulmiddin qizi',
                address: 'Qashqadaryo Viloyat, Kitob Tuman, Qashqir qishloq',
                passport: 'AA8432720',
                birthDate: '19.05.1981',
            },
            wantedUser: {
                image: 'http://localhost:3000/v1/files/profile_photos/d1df88dc-62b6-4ba7-9a5f-9669be9040a3.JPEG',
                // fullImage: 'http://localhost:3000/v1/files/profile_photos/d1df88dc-62b6-4ba7-9a5f-9669be9040a3.JPEG',
                fullName: 'Qambarov Qumriniso Qulmiddin qizi',
                address: 'Qashqadaryo Viloyat, Kitob Tuman, Qashqir qishloq',
                passport: 'AA8432720',
                birthDate: '19.05.1981',
            },
            car: {
                carImage: 'http://localhost:3000/v1/files/profile_photos/d1df88dc-62b6-4ba7-9a5f-9669be9040a3.JPEG',
                carNumber: '01O010OO',
            },
            takenImage: 'http://localhost:3000/v1/files/profile_photos/d1df88dc-62b6-4ba7-9a5f-9669be9040a3.JPEG',
            fullImage: 'http://localhost:3000/v1/files/profile_photos/d1df88dc-62b6-4ba7-9a5f-9669be9040a3.JPEG',
            initiator: 'ЖАЛАКУДУКСКИЙ РОВД',
            address: 'Туркистон кўчаси, Dehqon bozori',
            text: `Test xabar ${Math.random() * 100}. Time: ${new Date().toISOString()}`,
            mera: 'АРЕСТ',
            region: 'ОЛМАЛИК ШАҲРИ',
            statya: '139 ч.3 п.А;140 ч.1',
            rozType: 'МЕЖГОСУДАРСТВЕННЫЙ Р',
            location: [40.84764631407434, 69.61757628864146],
            // fullImage: 'ivss_images/full_image_0ab1cece-d8bc-42ea-af6a-067206810dbd.jpg',
            // takenImage: 'ivss_images/taken_image_47fbc602-65ea-460a-bbd8-051c9df946f0.jpg',
            objectName: 'Дехқон бозори',
            wantedDate: new Date('07.31.2019').toISOString(),
        };
        if (random % 3 === 0) {
            wanted.pUser = null;
            wanted.wantedUser = null;
            wanted.type = 'car';
        }
        else {
            wanted.car = null;
        }
        message = {
            messageType: 'wanted',
            to: { chatType: 'private', chatId: chatId },
            wanted: wanted,
            text: null,
        };
    }
    yield messenger
        .sendMessage(message)
        .then((res) => {
        console.log(res, 'Success sended');
        return res.data;
    })
        .catch((err) => {
        var _a;
        console.log((_a = err.response) === null || _a === void 0 ? void 0 : _a.data, 'err');
    });
}), 1000);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZXhhbXBsZXMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sS0FBSyxNQUFNLE9BQU8sQ0FBQztBQUMxQixPQUFPLEVBQUUsRUFBRSxJQUFJLE1BQU0sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUNwQywwQ0FBMEM7QUFDMUMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUN4QyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBSXBDLE1BQU0sT0FBTyxHQUFHLHVCQUF1QixDQUFDO0FBQ3hDLE1BQU0sUUFBUSxHQUFHLFFBQVEsQ0FBQyxHQUFHLENBQUMsb0JBQW9CLENBQUMsQ0FBQztBQUNwRCxNQUFNLEdBQUcsR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLENBQUM7QUFDM0MsUUFBUSxDQUFDLEdBQUcsQ0FBQyxvQkFBb0IsRUFBRSxHQUFHLENBQUMsQ0FBQztBQUV4QyxNQUFNLE1BQU0sR0FBRywwQkFBMEIsQ0FBQyxDQUFDLE9BQU87QUFFbEQsTUFBTSxNQUFNLEdBQUcsUUFBUSxDQUFDO0FBQ3hCLE1BQU0sT0FBTyxHQUFHLDBCQUEwQixDQUFDO0FBQzNDLE1BQU0sU0FBUyxHQUFHLFlBQVksQ0FBQztJQUM3QixPQUFPO0lBQ1AsTUFBTTtJQUNOLE9BQU87SUFDUCxjQUFjO1FBQ1osT0FBTyxVQUFVLENBQUM7SUFDcEIsQ0FBQztJQUNELEtBQUssRUFBRSxHQUdKLEVBQUU7UUFDSCxNQUFNLEtBQUssR0FDVCw4MUVBQTgxRSxDQUFDO1FBQ2oyRSxNQUFNLEVBQUUsSUFBSSxFQUFFLEdBQUcsTUFBTSxLQUFLLENBQUMsTUFBTSxDQUFDLEVBQUUsT0FBTyxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsMEJBQTBCLEtBQUssRUFBRSxFQUFFO1lBQ3RGLE9B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QUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxXQUFXLEVBQUU7U0FDakQsQ0FBQztRQUNGLElBQUksTUFBTSxHQUFHLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQztZQUNyQixNQUFNLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztZQUNwQixNQUFNLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztZQUN6QixNQUFNLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQztRQUN0QixDQUFDO2FBQU0sQ0FBQztZQUNOLE1BQU0sQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDO1FBQ3BCLENBQUM7UUFFRCxPQUFPLEdBQUc7WUFDUixXQUFXLEVBQUUsUUFBUTtZQUNyQixFQUFFLEVBQUUsRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUU7WUFDM0MsTUFBTSxFQUFFLE1BQU07WUFDZCxJQUFJLEVBQUUsSUFBSTtTQUNYLENBQUM7SUFDSixDQUFDO0lBRUQsTUFBTSxTQUFTO1NBQ1osV0FBVyxDQUFDLE9BQU8sQ0FBQztTQUNwQixJQUFJLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRTtRQUNaLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLGdCQUFnQixDQUFDLENBQUM7UUFDbkMsT0FBTyxHQUFHLENBQUMsSUFBSSxDQUFDO0lBQ2xCLENBQUMsQ0FBQztTQUNELEtBQUssQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFOztRQUNiLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBQSxHQUFHLENBQUMsUUFBUSwwQ0FBRSxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDekMsQ0FBQyxDQUFDLENBQUM7QUFDUCxDQUFDLENBQUEsRUFBRSxJQUFLLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7XHJcbmltcG9ydCB7IHYxIGFzIHV1aWRWMSB9IGZyb20gJ3V1aWQnO1xyXG4vLyBpbXBvcnQgeyBFTlYgfSBmcm9tICcuLi9jb21tb24vY29uZmlnJztcclxuaW1wb3J0IHsgZ2V0TWVzc2VuZ2VyIH0gZnJvbSAnLi4vaW5kZXgnO1xyXG5pbXBvcnQgeyBsb2NhbFN0ZyB9IGZyb20gJy4uL3V0aWxzJztcclxuaW1wb3J0IHsgSU9uVXBkYXRlIH0gZnJvbSAnLi4vdHlwZXMvYXBpL21lc3NhZ2UudHlwZXMnO1xyXG5pbXBvcnQgeyBJQ2hhdE1lc3NhZ2VXYW50ZWQsIElTZW5kQ2hhdE1lc3NhZ2VXYW50ZWQsIElTZW5kTWVzc2FnZSB9IGZyb20gJy4uL3R5cGVzL2FwaS9tZXNzYWdlJztcclxuXHJcbmNvbnN0IGJhc2VVUkwgPSAnaHR0cDovL2xvY2FsaG9zdDo3MDAwJztcclxuY29uc3QgbG9jYWxVaWQgPSBsb2NhbFN0Zy5nZXQoJ21lc3NlbmdlckRldmljZVVpZCcpO1xyXG5jb25zdCB1aWQgPSBsb2NhbFVpZCA/IGxvY2FsVWlkIDogdXVpZFYxKCk7XHJcbmxvY2FsU3RnLnNldCgnbWVzc2VuZ2VyRGV2aWNlVWlkJywgdWlkKTtcclxuXHJcbmNvbnN0IGNoYXRJZCA9ICc2NmNjMjVkM2MxODc1Y2ZhMGRkZGZhMjAnOyAvLyAhIHJtXHJcblxyXG5jb25zdCBhcGlLZXkgPSAncWFscW9uJztcclxuY29uc3QgYXBpSGFzaCA9ICc2NmIzNTc2ZDkxNzQyNWIyOWEzZTM2NDQnO1xyXG5jb25zdCBtZXNzZW5nZXIgPSBnZXRNZXNzZW5nZXIoe1xyXG4gIGJhc2VVUkwsXHJcbiAgYXBpS2V5LFxyXG4gIGFwaUhhc2gsXHJcbiAgbGFuZ3VhZ2VHZXR0ZXIoKSB7XHJcbiAgICByZXR1cm4gJ1V6LUxhdGluJztcclxuICB9LFxyXG4gIHRva2VuOiBhc3luYyAoKTogUHJvbWlzZTx7XHJcbiAgICBhY2Nlc3M6IHN0cmluZztcclxuICAgIHJlZnJlc2g6IHN0cmluZztcclxuICB9PiA9PiB7XHJcbiAgICBjb25zdCB0b2tlbiA9XHJcbiAgICAgICdCZWFyZXIgZXlKaGJHY2lPaUpJVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SjFjMlZ5SWpwN0ltbGtJam95TURBNUxDSjFjMlZ5Ym1GdFpTSTZJbFZ0WVhKaVpXc2lMQ0ptZFd4c1gyNWhiV1VpT2lKQlMwSkJVazlXSUZWTlFWSWlMQ0p3YUc5dVpWOXVkVzFpWlhJaU9pSXJPVGs0T1RRMU5ETTBOVFkzSWl3aVozSnZkWEFpT25zaWFXUWlPaklzSW01aGJXVWlPaUpCWkcxcGJpSXNJbUZqWTJWemMyVnpJanBiTTExOUxDSnZjbWRoYm1sNllYUnBiMjVmYVdRaU9tNTFiR3dzSW5ObGNuWnBZMlZ6SWpwYmV5SnBaQ0k2TWl3aWJtRnRaU0k2SW01MFptRmpaU0lzSW5OMFlYUjFjeUk2ZEhKMVpYMHNleUpwWkNJNk5pd2libUZ0WlNJNkluaGhkR3h2ZGlJc0luTjBZWFIxY3lJNmRISjFaWDBzZXlKcFpDSTZNVFFzSW01aGJXVWlPaUpsYldWb2JXOXVJaXdpYzNSaGRIVnpJanAwY25WbGZTeDdJbWxrSWpveE5pd2libUZ0WlNJNkltRjFkRzh0ZEhKaGJuTndiM0owSWl3aWMzUmhkSFZ6SWpwMGNuVmxmU3g3SW1sa0lqb3hPQ3dpYm1GdFpTSTZJbUZqWTJsa1pXNTBjeUlzSW5OMFlYUjFjeUk2ZEhKMVpYMHNleUpwWkNJNk1qQXNJbTVoYldVaU9pSmthR0VpTENKemRHRjBkWE1pT25SeWRXVjlMSHNpYVdRaU9qSXhMQ0p1WVcxbElqb2labTl5YldFeElpd2ljM1JoZEhWeklqcDBjblZsZlN4N0ltbGtJam95TWl3aWJtRnRaU0k2SW1sMmMzTXRiV0Z1WVdkbGNpSXNJbk4wWVhSMWN5STZkSEoxWlgwc2V5SnBaQ0k2TWpjc0ltNWhiV1VpT2lKeGRXbGpheTF6WldGeVkyZ2lMQ0p6ZEdGMGRYTWlPblJ5ZFdWOUxIc2lhV1FpT2pJNUxDSnVZVzFsSWpvaVkyRnRaWEpoSWl3aWMzUmhkSFZ6SWpwMGNuVmxmU3g3SW1sa0lqb3pNQ3dpYm1GdFpTSTZJbVoyZGlJc0luTjBZWFIxY3lJNmRISjFaWDBzZXlKcFpDSTZNekVzSW01aGJXVWlPaUpuY0hNaUxDSnpkR0YwZFhNaU9uUnlkV1Y5TEhzaWFXUWlPak15TENKdVlXMWxJam9pYzJGNWJHOTJJaXdpYzNSaGRIVnpJanAwY25WbGZTeDdJbWxrSWpvek5Dd2libUZ0WlNJNklteHBjM1JsWkMxd1pXOXdiR1VpTENKemRHRjBkWE1pT25SeWRXVjlMSHNpYVdRaU9qTTJMQ0p1WVcxbElqb2lkR0ZrWW1seUlpd2ljM1JoZEhWeklqcDBjblZsZlN4N0ltbGtJam96T0N3aWJtRnRaU0k2SW0xMGNDSXNJbk4wWVhSMWN5STZkSEoxWlgwc2V5SnBaQ0k2TkRBc0ltNWhiV1VpT2lKamNtbHRaU0lzSW5OMFlYUjFjeUk2ZEhKMVpYMHNleUpwWkNJNk5ERXNJbTVoYldVaU9pSmpZWElpTENKemRHRjBkWE1pT25SeWRXVjlMSHNpYVdRaU9qUXlMQ0p1WVcxbElqb2liM0JuSWl3aWMzUmhkSFZ6SWpwMGNuVmxmU3g3SW1sa0lqbzBNeXdpYm1GdFpTSTZJbTFwWWlJc0luTjBZWFIxY3lJNmRISjFaWDBzZXlKcFpDSTZORFFzSW01aGJXVWlPaUp6WlhKMmFXTmxJaXdpYzNSaGRIVnpJanAwY25WbGZTeDdJbWxrSWpvME5Td2libUZ0WlNJNkltNXZkR2xtYVdOaGRHbHZibk1pTENKemRHRjBkWE1pT25SeWRXVjlMSHNpYVdRaU9qUTJMQ0p1WVcxbElqb2lkR1ZsYm1GblpYSnpJaXdpYzNSaGRIVnpJanAwY25WbGZTeDdJbWxrSWpvME55d2libUZ0WlNJNkltSjFjeTF3WVhKcmFXNW5JaXdpYzNSaGRIVnpJanAwY25WbGZTeDdJbWxrSWpvME9Dd2libUZ0WlNJNkltUmxkR1ZqZEc5eUlpd2ljM1JoZEhWeklqcDBjblZsZlN4N0ltbGtJam8wT1N3aWJtRnRaU0k2SW1Ga1pDMWpZVzFsY21FaUxDSnpkR0YwZFhNaU9uUnlkV1Y5TEhzaWFXUWlPalV3TENKdVlXMWxJam9pYVhaemN5MWpiMjUwY205c0lpd2ljM1JoZEhWeklqcDBjblZsZlN4N0ltbGtJam8xTVN3aWJtRnRaU0k2SWpWMFlYTm9ZV0ppZFhNaUxDSnpkR0YwZFhNaU9uUnlkV1Y5TEhzaWFXUWlPalV5TENKdVlXMWxJam9pYkc5bloyVnlJaXdpYzNSaGRIVnpJanAwY25WbGZTeDdJbWxrSWpvMU15d2libUZ0WlNJNkluTmpieUlzSW5OMFlYUjFjeUk2ZEhKMVpYMHNleUpwWkNJNk5UUXNJbTVoYldVaU9pSnNZVzVuZFdGblpTSXNJbk4wWVhSMWN5STZkSEoxWlgwc2V5SnBaQ0k2TlRVc0ltNWhiV1VpT2lKemRYQmxjblpwYzI5eUlpd2ljM1JoZEhWeklqcDBjblZsZlN4N0ltbGtJam8xTnl3aWJtRnRaU0k2SW0xNUxXbHVjM0JsWTNSdmNpSXNJbk4wWVhSMWN5STZkSEoxWlgwc2V5SnBaQ0k2TlRrc0ltNWhiV1VpT2lKaWIyUjVMV05oYldWeVlTSXNJbk4wWVhSMWN5STZkSEoxWlgwc2V5SnBaQ0k2TmpBc0ltNWhiV1VpT2lKbGJXbG5jbUZ1ZENJc0luTjBZWFIxY3lJNmRISjFaWDFkTENKa2FYTjBjbWxqZEVsa0lqcHVkV3hzTENKb1lYTm9Jam9pTldFNU56QTNNRGc0WkRObU16SmlOalkxWkRRMk5HWTFZbVkwTjJNMll6QWlmU3dpYVdGMElqb3hOekkwTmpVME16ZzVMQ0psZUhBaU9qRTNNalEzTkRBM09EbDkucWlWTjhWNXhkU1lrblhIUmVxSVY4WlR1TXhxZVNVcHN3UC0wWVNsc2pyTSc7XHJcbiAgICBjb25zdCB7IGRhdGEgfSA9IGF3YWl0IGF4aW9zLmNyZWF0ZSh7IGJhc2VVUkwgfSkuZ2V0KGAvdjEvYXV0aC9tZS1mcm9tP3Rva2VuPSR7dG9rZW59YCwge1xyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgQXV0aG9yaXphdGlvbjogYEJhc2ljICR7YnRvYShgJHthcGlLZXl9OiR7YXBpSGFzaH1gKX1gLFxyXG4gICAgICB9LFxyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgYWNjZXNzOiBkYXRhLmRhdGEudG9rZW4uYWNjZXNzVG9rZW4sXHJcbiAgICAgIHJlZnJlc2g6IGRhdGEuZGF0YS50b2tlbi5yZWZyZXNoVG9rZW4sXHJcbiAgICB9O1xyXG4gICAgLy8gY29uc3QgcmVzID0gYXdhaXQgYXhpb3MucG9zdChcclxuICAgIC8vICAgYCR7YmFzZVVSTH0vdjEvYXV0aC9sb2dpbmAsXHJcbiAgICAvLyAgIHtcclxuICAgIC8vICAgICB1c2VybmFtZTogJ1VtYXJraGFuJywgLy8gQWRoYW1qb24sIFVtYXJraGFuXHJcbiAgICAvLyAgICAgcGFzc3dvcmQ6ICcxMjMnLFxyXG4gICAgLy8gICB9LFxyXG4gICAgLy8gICB7XHJcbiAgICAvLyAgICAgaGVhZGVyczogcmVxdWlyZWRIZWFkZXJzLFxyXG4gICAgLy8gICB9LFxyXG4gICAgLy8gKTtcclxuXHJcbiAgICAvLyByZXR1cm4ge1xyXG4gICAgLy8gICBhY2Nlc3M6IHJlcy5kYXRhLmRhdGEudG9rZW4uYWNjZXNzVG9rZW4sXHJcbiAgICAvLyAgIHJlZnJlc2g6IHJlcy5kYXRhLmRhdGEudG9rZW4ucmVmcmVzaFRva2VuLFxyXG4gICAgLy8gfTtcclxuICB9LFxyXG4gIHBvbGxpbmc6IHsgaW50ZXJ2YWw6IDVfMDAwLCBsaW1pdDogMTAwIH0sXHJcbn0pO1xyXG5cclxuY29uc29sZS5sb2coJ1N1Y2Nlc3Mgc3RhcnRlZCcpO1xyXG5cclxubWVzc2VuZ2VyXHJcbiAgLm9uKCdjb25uZWN0JywgKC4uLmFyZ3MpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKCdjb25uZWN0ZWQnLCBhcmdzKTtcclxuICB9KVxyXG4gIC5vbigncmVjb25uZWN0X2F0dGVtcHQnLCAoLi4uYXJncykgPT4ge1xyXG4gICAgY29uc29sZS5sb2coJ3JlY29ubmVjdF9hdHRlbXB0JywgYXJncyk7XHJcbiAgfSlcclxuICAub24oJ3JlY29ubmVjdCcsICguLi5hcmdzKSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZygncmVjb25uZWN0JywgYXJncyk7XHJcbiAgfSlcclxuICAub24oJ2Rpc2Nvbm5lY3QnLCAoeyByZWFzb24sIGRldGFpbHMgfSkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coJ2Rpc2Nvbm5lY3QnLCByZWFzb24pO1xyXG4gIH0pXHJcbiAgLm9uKCdwb25nJywgKCkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coJ3BvbmcnKTtcclxuICB9KVxyXG4gIC5vbigndXBkYXRlJywgKGRhdGE6IElPblVwZGF0ZSkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coZGF0YS5faWQsICd1cGRhdGUnKTtcclxuICB9KVxyXG4gIC5vbignY2hhdEFjdGlvbicsIChhY3Rpb24pID0+IHtcclxuICAgIGNvbnNvbGUubG9nKGFjdGlvbiwgJ2NoYXRBY3Rpb24nKTtcclxuICB9KTtcclxuXHJcbmNvbnN0IGdldFJhZG9tTnVtYmVyID0gKGZyb206IG51bWJlciwgdG86IG51bWJlcikgPT4gZnJvbSArIE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqICh0byAtIGZyb20pKTtcclxuXHJcbnNldEludGVydmFsKGFzeW5jICgpID0+IHtcclxuICBsZXQgbWVzc2FnZTogSVNlbmRNZXNzYWdlO1xyXG4gIGNvbnN0IHJhbmRvbSA9IGdldFJhZG9tTnVtYmVyKDAsIDEwMCk7XHJcbiAgLy8gY29uc3QgcmFuZG9tID0gMztcclxuICBpZiAocmFuZG9tICUgMiA9PT0gMCkge1xyXG4gICAgbWVzc2FnZSA9IHtcclxuICAgICAgbWVzc2FnZVR5cGU6ICd0ZXh0JyxcclxuICAgICAgdG86IHsgY2hhdFR5cGU6ICdwcml2YXRlJywgY2hhdElkOiBjaGF0SWQgfSxcclxuICAgICAgdGV4dDogYFRlc3QgeGFiYXIgJHtNYXRoLnJhbmRvbSgpICogMTAwfS4gVGltZTogJHtuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCl9YCxcclxuICAgIH07XHJcbiAgfSBlbHNlIHtcclxuICAgIGNvbnN0IHdhbnRlZDogSVNlbmRDaGF0TWVzc2FnZVdhbnRlZCA9IHtcclxuICAgICAgdHlwZTogJ3VzZXInLFxyXG4gICAgICB0aXRsZTogJ01WRC1RaWRpcnV2JyxcclxuICAgICAgZGF0YWJhc2VOYW1lOiAnTVZELVFpZGlydXYnLFxyXG4gICAgICBwVXNlcjoge1xyXG4gICAgICAgIGltYWdlOlxyXG4gICAgICAgICAgJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC92MS9maWxlcy9wcm9maWxlX3Bob3Rvcy9kMWRmODhkYy02MmI2LTRiYTctOWE1Zi05NjY5YmU5MDQwYTMuSlBFRycsXHJcbiAgICAgICAgLy8gZnVsbEltYWdlOiAnaHR0cDovL2xvY2FsaG9zdDozMDAwL3YxL2ZpbGVzL3Byb2ZpbGVfcGhvdG9zL2QxZGY4OGRjLTYyYjYtNGJhNy05YTVmLTk2NjliZTkwNDBhMy5KUEVHJyxcclxuICAgICAgICBmdWxsTmFtZTogJ1FhbWJhcm92IFF1bXJpbmlzbyBRdWxtaWRkaW4gcWl6aScsXHJcbiAgICAgICAgYWRkcmVzczogJ1Fhc2hxYWRhcnlvIFZpbG95YXQsIEtpdG9iIFR1bWFuLCBRYXNocWlyIHFpc2hsb3EnLFxyXG4gICAgICAgIHBhc3Nwb3J0OiAnQUE4NDMyNzIwJyxcclxuICAgICAgICBiaXJ0aERhdGU6ICcxOS4wNS4xOTgxJyxcclxuICAgICAgfSxcclxuICAgICAgd2FudGVkVXNlcjoge1xyXG4gICAgICAgIGltYWdlOlxyXG4gICAgICAgICAgJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC92MS9maWxlcy9wcm9maWxlX3Bob3Rvcy9kMWRmODhkYy02MmI2LTRiYTctOWE1Zi05NjY5YmU5MDQwYTMuSlBFRycsXHJcbiAgICAgICAgLy8gZnVsbEltYWdlOiAnaHR0cDovL2xvY2FsaG9zdDozMDAwL3YxL2ZpbGVzL3Byb2ZpbGVfcGhvdG9zL2QxZGY4OGRjLTYyYjYtNGJhNy05YTVmLTk2NjliZTkwNDBhMy5KUEVHJyxcclxuICAgICAgICBmdWxsTmFtZTogJ1FhbWJhcm92IFF1bXJpbmlzbyBRdWxtaWRkaW4gcWl6aScsXHJcbiAgICAgICAgYWRkcmVzczogJ1Fhc2hxYWRhcnlvIFZpbG95YXQsIEtpdG9iIFR1bWFuLCBRYXNocWlyIHFpc2hsb3EnLFxyXG4gICAgICAgIHBhc3Nwb3J0OiAnQUE4NDMyNzIwJyxcclxuICAgICAgICBiaXJ0aERhdGU6ICcxOS4wNS4xOTgxJyxcclxuICAgICAgfSxcclxuICAgICAgY2FyOiB7XHJcbiAgICAgICAgY2FySW1hZ2U6XHJcbiAgICAgICAgICAnaHR0cDovL2xvY2FsaG9zdDozMDAwL3YxL2ZpbGVzL3Byb2ZpbGVfcGhvdG9zL2QxZGY4OGRjLTYyYjYtNGJhNy05YTVmLTk2NjliZTkwNDBhMy5KUEVHJyxcclxuICAgICAgICBjYXJOdW1iZXI6ICcwMU8wMTBPTycsXHJcbiAgICAgIH0sXHJcbiAgICAgIHRha2VuSW1hZ2U6XHJcbiAgICAgICAgJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC92MS9maWxlcy9wcm9maWxlX3Bob3Rvcy9kMWRmODhkYy02MmI2LTRiYTctOWE1Zi05NjY5YmU5MDQwYTMuSlBFRycsXHJcbiAgICAgIGZ1bGxJbWFnZTpcclxuICAgICAgICAnaHR0cDovL2xvY2FsaG9zdDozMDAwL3YxL2ZpbGVzL3Byb2ZpbGVfcGhvdG9zL2QxZGY4OGRjLTYyYjYtNGJhNy05YTVmLTk2NjliZTkwNDBhMy5KUEVHJyxcclxuICAgICAgaW5pdGlhdG9yOiAn0JbQkNCb0JDQmtCj0JTQo9Ca0KHQmtCY0Jkg0KDQntCS0JQnLFxyXG4gICAgICBhZGRyZXNzOiAn0KLRg9GA0LrQuNGB0YLQvtC9INC60Z7Rh9Cw0YHQuCwgRGVocW9uIGJvem9yaScsXHJcbiAgICAgIHRleHQ6IGBUZXN0IHhhYmFyICR7TWF0aC5yYW5kb20oKSAqIDEwMH0uIFRpbWU6ICR7bmV3IERhdGUoKS50b0lTT1N0cmluZygpfWAsXHJcblxyXG4gICAgICBtZXJhOiAn0JDQoNCV0KHQoicsXHJcbiAgICAgIHJlZ2lvbjogJ9Ce0JvQnNCQ0JvQmNCaINCo0JDSstCg0JgnLFxyXG4gICAgICBzdGF0eWE6ICcxMzkg0YcuMyDQvy7QkDsxNDAg0YcuMScsXHJcbiAgICAgIHJvelR5cGU6ICfQnNCV0JbQk9Ce0KHQo9CU0JDQoNCh0KLQktCV0J3QndCr0Jkg0KAnLFxyXG4gICAgICBsb2NhdGlvbjogWzQwLjg0NzY0NjMxNDA3NDM0LCA2OS42MTc1NzYyODg2NDE0Nl0sXHJcbiAgICAgIC8vIGZ1bGxJbWFnZTogJ2l2c3NfaW1hZ2VzL2Z1bGxfaW1hZ2VfMGFiMWNlY2UtZDhiYy00MmVhLWFmNmEtMDY3MjA2ODEwZGJkLmpwZycsXHJcbiAgICAgIC8vIHRha2VuSW1hZ2U6ICdpdnNzX2ltYWdlcy90YWtlbl9pbWFnZV80N2ZiYzYwMi02NWVhLTQ2MGEtYmJkOC0wNTFjOWRmOTQ2ZjAuanBnJyxcclxuICAgICAgb2JqZWN0TmFtZTogJ9CU0LXRhdKb0L7QvSDQsdC+0LfQvtGA0LgnLFxyXG4gICAgICB3YW50ZWREYXRlOiBuZXcgRGF0ZSgnMDcuMzEuMjAxOScpLnRvSVNPU3RyaW5nKCksXHJcbiAgICB9O1xyXG4gICAgaWYgKHJhbmRvbSAlIDMgPT09IDApIHtcclxuICAgICAgd2FudGVkLnBVc2VyID0gbnVsbDtcclxuICAgICAgd2FudGVkLndhbnRlZFVzZXIgPSBudWxsO1xyXG4gICAgICB3YW50ZWQudHlwZSA9ICdjYXInO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgd2FudGVkLmNhciA9IG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgbWVzc2FnZSA9IHtcclxuICAgICAgbWVzc2FnZVR5cGU6ICd3YW50ZWQnLFxyXG4gICAgICB0bzogeyBjaGF0VHlwZTogJ3ByaXZhdGUnLCBjaGF0SWQ6IGNoYXRJZCB9LFxyXG4gICAgICB3YW50ZWQ6IHdhbnRlZCxcclxuICAgICAgdGV4dDogbnVsbCxcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBhd2FpdCBtZXNzZW5nZXJcclxuICAgIC5zZW5kTWVzc2FnZShtZXNzYWdlKVxyXG4gICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhyZXMsICdTdWNjZXNzIHNlbmRlZCcpO1xyXG4gICAgICByZXR1cm4gcmVzLmRhdGE7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgY29uc29sZS5sb2coZXJyLnJlc3BvbnNlPy5kYXRhLCAnZXJyJyk7XHJcbiAgICB9KTtcclxufSwgMV8wMDApO1xyXG4iXX0=