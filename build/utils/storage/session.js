import { decrypt, encrypt } from '../crypto';
function createSessionStorage() {
    function set(key, value) {
        sessionStorage.setItem(key, encrypt(value));
    }
    function get(key) {
        const json = sessionStorage.getItem(key);
        let data = null;
        if (json) {
            try {
                data = decrypt(json);
            }
            catch (_a) {
                // Prevent parsing failure
            }
        }
        return data;
    }
    function remove(key) {
        window.sessionStorage.removeItem(key);
    }
    function clear() {
        window.sessionStorage.clear();
    }
    return {
        set,
        get,
        remove,
        clear,
    };
}
export const sessionStg = createSessionStorage();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Vzc2lvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy91dGlscy9zdG9yYWdlL3Nlc3Npb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFFN0MsU0FBUyxvQkFBb0I7SUFDM0IsU0FBUyxHQUFHLENBQW9CLEdBQU0sRUFBRSxLQUFXO1FBQ2pELGNBQWMsQ0FBQyxPQUFPLENBQUMsR0FBYSxFQUFFLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQ3hELENBQUM7SUFFRCxTQUFTLEdBQUcsQ0FBb0IsR0FBTTtRQUNwQyxNQUFNLElBQUksR0FBRyxjQUFjLENBQUMsT0FBTyxDQUFDLEdBQWEsQ0FBQyxDQUFDO1FBQ25ELElBQUksSUFBSSxHQUFnQixJQUFJLENBQUM7UUFDN0IsSUFBSSxJQUFJLEVBQUUsQ0FBQztZQUNULElBQUksQ0FBQztnQkFDSCxJQUFJLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ3ZCLENBQUM7WUFBQyxXQUFNLENBQUM7Z0JBQ1AsMEJBQTBCO1lBQzVCLENBQUM7UUFDSCxDQUFDO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRUQsU0FBUyxNQUFNLENBQUMsR0FBWTtRQUMxQixNQUFNLENBQUMsY0FBYyxDQUFDLFVBQVUsQ0FBQyxHQUFhLENBQUMsQ0FBQztJQUNsRCxDQUFDO0lBRUQsU0FBUyxLQUFLO1FBQ1osTUFBTSxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUNoQyxDQUFDO0lBRUQsT0FBTztRQUNMLEdBQUc7UUFDSCxHQUFHO1FBQ0gsTUFBTTtRQUNOLEtBQUs7S0FDTixDQUFDO0FBQ0osQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRyxvQkFBb0IsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGVjcnlwdCwgZW5jcnlwdCB9IGZyb20gJy4uL2NyeXB0byc7XHJcblxyXG5mdW5jdGlvbiBjcmVhdGVTZXNzaW9uU3RvcmFnZTxUIGV4dGVuZHMgV2luZG93U2Vzc2lvblN0b3JhZ2UgPSBXaW5kb3dTZXNzaW9uU3RvcmFnZT4oKSB7XHJcbiAgZnVuY3Rpb24gc2V0PEsgZXh0ZW5kcyBrZXlvZiBUPihrZXk6IEssIHZhbHVlOiBUW0tdKSB7XHJcbiAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKGtleSBhcyBzdHJpbmcsIGVuY3J5cHQodmFsdWUpKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGdldDxLIGV4dGVuZHMga2V5b2YgVD4oa2V5OiBLKSB7XHJcbiAgICBjb25zdCBqc29uID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbShrZXkgYXMgc3RyaW5nKTtcclxuICAgIGxldCBkYXRhOiBUW0tdIHwgbnVsbCA9IG51bGw7XHJcbiAgICBpZiAoanNvbikge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGRhdGEgPSBkZWNyeXB0KGpzb24pO1xyXG4gICAgICB9IGNhdGNoIHtcclxuICAgICAgICAvLyBQcmV2ZW50IHBhcnNpbmcgZmFpbHVyZVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZGF0YTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIHJlbW92ZShrZXk6IGtleW9mIFQpIHtcclxuICAgIHdpbmRvdy5zZXNzaW9uU3RvcmFnZS5yZW1vdmVJdGVtKGtleSBhcyBzdHJpbmcpO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gY2xlYXIoKSB7XHJcbiAgICB3aW5kb3cuc2Vzc2lvblN0b3JhZ2UuY2xlYXIoKTtcclxuICB9XHJcblxyXG4gIHJldHVybiB7XHJcbiAgICBzZXQsXHJcbiAgICBnZXQsXHJcbiAgICByZW1vdmUsXHJcbiAgICBjbGVhcixcclxuICB9O1xyXG59XHJcblxyXG5leHBvcnQgY29uc3Qgc2Vzc2lvblN0ZyA9IGNyZWF0ZVNlc3Npb25TdG9yYWdlKCk7XHJcbiJdfQ==