import { plainToClass } from 'class-transformer';
import { validate } from 'class-validator';
import { BaseException } from '../errors/common.error';
export const validateIt = async (data, classType, groups) => {
    if (!data) {
        throw BaseException.ValidationError('Request body should be object');
    }
    const classData = plainToClass(classType, data, {
        excludeExtraneousValues: false,
    });
    const errors = await validate(classData, { groups, whitelist: true });
    if (!errors || errors.length === 0)
        return classData;
    throw BaseException.ValidationError(errors);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmFsaWRhdGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tbW9uL3ZhbGlkYXRpb24vdmFsaWRhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFvQixZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNuRSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDM0MsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRXZELE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRyxLQUFLLEVBQUssSUFBSSxFQUFFLFNBQThCLEVBQUUsTUFBZ0IsRUFBYyxFQUFFO0lBQ3hHLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNWLE1BQU0sYUFBYSxDQUFDLGVBQWUsQ0FBQywrQkFBK0IsQ0FBQyxDQUFDO0lBQ3ZFLENBQUM7SUFFRCxNQUFNLFNBQVMsR0FBRyxZQUFZLENBQUMsU0FBUyxFQUFFLElBQVMsRUFBRTtRQUNuRCx1QkFBdUIsRUFBRSxLQUFLO0tBQy9CLENBQUMsQ0FBQztJQUVILE1BQU0sTUFBTSxHQUFHLE1BQU0sUUFBUSxDQUFDLFNBQW1CLEVBQUUsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7SUFFaEYsSUFBSSxDQUFDLE1BQU0sSUFBSSxNQUFNLENBQUMsTUFBTSxLQUFLLENBQUM7UUFBRSxPQUFPLFNBQVMsQ0FBQztJQUVyRCxNQUFNLGFBQWEsQ0FBQyxlQUFlLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDOUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2xhc3NDb25zdHJ1Y3RvciwgcGxhaW5Ub0NsYXNzIH0gZnJvbSAnY2xhc3MtdHJhbnNmb3JtZXInO1xyXG5pbXBvcnQgeyB2YWxpZGF0ZSB9IGZyb20gJ2NsYXNzLXZhbGlkYXRvcic7XHJcbmltcG9ydCB7IEJhc2VFeGNlcHRpb24gfSBmcm9tICcuLi9lcnJvcnMvY29tbW9uLmVycm9yJztcclxuXHJcbmV4cG9ydCBjb25zdCB2YWxpZGF0ZUl0ID0gYXN5bmMgPFQ+KGRhdGEsIGNsYXNzVHlwZTogQ2xhc3NDb25zdHJ1Y3RvcjxUPiwgZ3JvdXBzOiBzdHJpbmdbXSk6IFByb21pc2U8VD4gPT4ge1xyXG4gIGlmICghZGF0YSkge1xyXG4gICAgdGhyb3cgQmFzZUV4Y2VwdGlvbi5WYWxpZGF0aW9uRXJyb3IoJ1JlcXVlc3QgYm9keSBzaG91bGQgYmUgb2JqZWN0Jyk7XHJcbiAgfVxyXG5cclxuICBjb25zdCBjbGFzc0RhdGEgPSBwbGFpblRvQ2xhc3MoY2xhc3NUeXBlLCBkYXRhIGFzIFQsIHtcclxuICAgIGV4Y2x1ZGVFeHRyYW5lb3VzVmFsdWVzOiBmYWxzZSxcclxuICB9KTtcclxuXHJcbiAgY29uc3QgZXJyb3JzID0gYXdhaXQgdmFsaWRhdGUoY2xhc3NEYXRhIGFzIG9iamVjdCwgeyBncm91cHMsIHdoaXRlbGlzdDogdHJ1ZSB9KTtcclxuXHJcbiAgaWYgKCFlcnJvcnMgfHwgZXJyb3JzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIGNsYXNzRGF0YTtcclxuXHJcbiAgdGhyb3cgQmFzZUV4Y2VwdGlvbi5WYWxpZGF0aW9uRXJyb3IoZXJyb3JzKTtcclxufTtcclxuIl19