export function formatDate(date) {
    const locale = 'uz-UZ';
    return {
        date: date,
        iso: date.toISOString(),
        hh_mm: date.toLocaleString(locale, {
            hour: '2-digit',
            minute: '2-digit',
            hour12: false,
        }),
        hh_mm_ss: date.toLocaleString(locale, {
            hour: '2-digit',
            minute: '2-digit',
            second: '2-digit',
            hour12: false,
        }),
        YYYY_MM_DD: date.toLocaleString(locale, {
            day: '2-digit',
            month: '2-digit',
            year: 'numeric',
        }),
        YYYY_MM_DD_hh_mm_ss: date.toLocaleString(locale, {
            year: 'numeric',
            month: '2-digit',
            day: '2-digit',
            hour: '2-digit',
            minute: '2-digit',
            second: '2-digit',
            hour12: false,
        }),
    };
}
Date.prototype.toFormatted = function () {
    return formatDate(this);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS10by1mb3JtYXR0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tbW9uL3V0aWxpdHkvZGF0ZS10by1mb3JtYXR0ZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxVQUFVLFVBQVUsQ0FBQyxJQUFVO0lBQ25DLE1BQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQztJQUV2QixPQUFPO1FBQ0wsSUFBSSxFQUFFLElBQUk7UUFDVixHQUFHLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRTtRQUN2QixLQUFLLEVBQUUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEVBQUU7WUFDakMsSUFBSSxFQUFFLFNBQVM7WUFDZixNQUFNLEVBQUUsU0FBUztZQUNqQixNQUFNLEVBQUUsS0FBSztTQUNkLENBQUM7UUFDRixRQUFRLEVBQUUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEVBQUU7WUFDcEMsSUFBSSxFQUFFLFNBQVM7WUFDZixNQUFNLEVBQUUsU0FBUztZQUNqQixNQUFNLEVBQUUsU0FBUztZQUNqQixNQUFNLEVBQUUsS0FBSztTQUNkLENBQUM7UUFDRixVQUFVLEVBQUUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEVBQUU7WUFDdEMsR0FBRyxFQUFFLFNBQVM7WUFDZCxLQUFLLEVBQUUsU0FBUztZQUNoQixJQUFJLEVBQUUsU0FBUztTQUNoQixDQUFDO1FBQ0YsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEVBQUU7WUFDL0MsSUFBSSxFQUFFLFNBQVM7WUFDZixLQUFLLEVBQUUsU0FBUztZQUNoQixHQUFHLEVBQUUsU0FBUztZQUNkLElBQUksRUFBRSxTQUFTO1lBQ2YsTUFBTSxFQUFFLFNBQVM7WUFDakIsTUFBTSxFQUFFLFNBQVM7WUFDakIsTUFBTSxFQUFFLEtBQUs7U0FDZCxDQUFDO0tBQ0gsQ0FBQztBQUNKLENBQUM7QUFFRCxJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsR0FBRztJQUMzQixPQUFPLFVBQVUsQ0FBQyxJQUFZLENBQUMsQ0FBQztBQUNsQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gZm9ybWF0RGF0ZShkYXRlOiBEYXRlKTogSUZvcm1hdHRlZERhdGUge1xyXG4gIGNvbnN0IGxvY2FsZSA9ICd1ei1VWic7XHJcblxyXG4gIHJldHVybiB7XHJcbiAgICBkYXRlOiBkYXRlLFxyXG4gICAgaXNvOiBkYXRlLnRvSVNPU3RyaW5nKCksXHJcbiAgICBoaF9tbTogZGF0ZS50b0xvY2FsZVN0cmluZyhsb2NhbGUsIHtcclxuICAgICAgaG91cjogJzItZGlnaXQnLFxyXG4gICAgICBtaW51dGU6ICcyLWRpZ2l0JyxcclxuICAgICAgaG91cjEyOiBmYWxzZSxcclxuICAgIH0pLFxyXG4gICAgaGhfbW1fc3M6IGRhdGUudG9Mb2NhbGVTdHJpbmcobG9jYWxlLCB7XHJcbiAgICAgIGhvdXI6ICcyLWRpZ2l0JyxcclxuICAgICAgbWludXRlOiAnMi1kaWdpdCcsXHJcbiAgICAgIHNlY29uZDogJzItZGlnaXQnLFxyXG4gICAgICBob3VyMTI6IGZhbHNlLFxyXG4gICAgfSksXHJcbiAgICBZWVlZX01NX0REOiBkYXRlLnRvTG9jYWxlU3RyaW5nKGxvY2FsZSwge1xyXG4gICAgICBkYXk6ICcyLWRpZ2l0JyxcclxuICAgICAgbW9udGg6ICcyLWRpZ2l0JyxcclxuICAgICAgeWVhcjogJ251bWVyaWMnLFxyXG4gICAgfSksXHJcbiAgICBZWVlZX01NX0REX2hoX21tX3NzOiBkYXRlLnRvTG9jYWxlU3RyaW5nKGxvY2FsZSwge1xyXG4gICAgICB5ZWFyOiAnbnVtZXJpYycsXHJcbiAgICAgIG1vbnRoOiAnMi1kaWdpdCcsXHJcbiAgICAgIGRheTogJzItZGlnaXQnLFxyXG4gICAgICBob3VyOiAnMi1kaWdpdCcsXHJcbiAgICAgIG1pbnV0ZTogJzItZGlnaXQnLFxyXG4gICAgICBzZWNvbmQ6ICcyLWRpZ2l0JyxcclxuICAgICAgaG91cjEyOiBmYWxzZSxcclxuICAgIH0pLFxyXG4gIH07XHJcbn1cclxuXHJcbkRhdGUucHJvdG90eXBlLnRvRm9ybWF0dGVkID0gZnVuY3Rpb24gKCkge1xyXG4gIHJldHVybiBmb3JtYXREYXRlKHRoaXMgYXMgRGF0ZSk7XHJcbn07XHJcblxyXG5leHBvcnQgeyB9O1xyXG5cclxuZGVjbGFyZSBnbG9iYWwge1xyXG4gIGludGVyZmFjZSBJRm9ybWF0dGVkRGF0ZSB7XHJcbiAgICBkYXRlOiBEYXRlO1xyXG4gICAgaXNvOiBzdHJpbmc7XHJcbiAgICBoaF9tbTogc3RyaW5nO1xyXG4gICAgaGhfbW1fc3M6IHN0cmluZztcclxuICAgIFlZWVlfTU1fREQ6IHN0cmluZztcclxuICAgIFlZWVlfTU1fRERfaGhfbW1fc3M6IHN0cmluZztcclxuICB9XHJcblxyXG4gIGludGVyZmFjZSBEYXRlIHtcclxuICAgIHRvRm9ybWF0dGVkOiAoKSA9PiBJRm9ybWF0dGVkRGF0ZTtcclxuICB9XHJcbn1cclxuIl19