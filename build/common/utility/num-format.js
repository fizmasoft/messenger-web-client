/**
 * Returns a string.
 * @param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.
 */
export function numberFormat(number, fractionDigits = 0, dsep = ".", tsep = ",") {
    if (isNaN(number) ||
        (typeof number !== "number" && typeof number !== "bigint"))
        return "";
    const numStr = number.toFixed(fractionDigits);
    let pindex = numStr.indexOf("."), fnums, decimals;
    const parts = [];
    if (pindex > -1) {
        fnums = numStr.substring(0, pindex).split("");
        decimals = dsep + numStr.substr(pindex + 1);
    }
    else {
        fnums = numStr.split("");
        decimals = "";
    }
    do {
        parts.unshift(fnums.splice(-3, 3).join(""));
    } while (fnums.length);
    return parts.join(tsep) + decimals;
}
export function numberWithZero(num, zeroLen) {
    if (isNaN(num))
        return "";
    let zeros = "";
    for (let i = 0; i < zeroLen; i++) {
        zeros += "0";
    }
    return `${zeros}${num}`;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnVtLWZvcm1hdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21tb24vdXRpbGl0eS9udW0tZm9ybWF0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRztBQUNILE1BQU0sVUFBVSxZQUFZLENBQUMsTUFBYyxFQUFFLGNBQWMsR0FBRyxDQUFDLEVBQUUsSUFBSSxHQUFHLEdBQUcsRUFBRSxJQUFJLEdBQUcsR0FBRztJQUNyRixJQUNFLEtBQUssQ0FBQyxNQUFNLENBQUM7UUFDYixDQUFDLE9BQU8sTUFBTSxLQUFLLFFBQVEsSUFBSSxPQUFPLE1BQU0sS0FBSyxRQUFRLENBQUM7UUFFMUQsT0FBTyxFQUFFLENBQUM7SUFFWixNQUFNLE1BQU0sR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQzlDLElBQUksTUFBTSxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQzlCLEtBQWUsRUFDZixRQUFnQixDQUFDO0lBQ25CLE1BQU0sS0FBSyxHQUFhLEVBQUUsQ0FBQztJQUUzQixJQUFJLE1BQU0sR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDO1FBQ2hCLEtBQUssR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDOUMsUUFBUSxHQUFHLElBQUksR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztJQUM5QyxDQUFDO1NBQU0sQ0FBQztRQUNOLEtBQUssR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ3pCLFFBQVEsR0FBRyxFQUFFLENBQUM7SUFDaEIsQ0FBQztJQUVELEdBQUcsQ0FBQztRQUNGLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUM5QyxDQUFDLFFBQVEsS0FBSyxDQUFDLE1BQU0sRUFBRTtJQUV2QixPQUFPLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsUUFBUSxDQUFDO0FBQ3JDLENBQUM7QUFFRCxNQUFNLFVBQVUsY0FBYyxDQUFDLEdBQVcsRUFBRSxPQUFlO0lBQ3pELElBQUksS0FBSyxDQUFDLEdBQUcsQ0FBQztRQUFFLE9BQU8sRUFBRSxDQUFDO0lBRTFCLElBQUksS0FBSyxHQUFHLEVBQUUsQ0FBQztJQUVmLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxPQUFPLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztRQUNqQyxLQUFLLElBQUksR0FBRyxDQUFDO0lBQ2YsQ0FBQztJQUVELE9BQU8sR0FBRyxLQUFLLEdBQUcsR0FBRyxFQUFFLENBQUM7QUFDMUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBSZXR1cm5zIGEgc3RyaW5nLlxyXG4gKiBAcGFyYW0gZnJhY3Rpb25EaWdpdHMgTnVtYmVyIG9mIGRpZ2l0cyBhZnRlciB0aGUgZGVjaW1hbCBwb2ludC4gTXVzdCBiZSBpbiB0aGUgcmFuZ2UgMCAtIDIwLCBpbmNsdXNpdmUuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gbnVtYmVyRm9ybWF0KG51bWJlcjogbnVtYmVyLCBmcmFjdGlvbkRpZ2l0cyA9IDAsIGRzZXAgPSBcIi5cIiwgdHNlcCA9IFwiLFwiKSB7XHJcbiAgaWYgKFxyXG4gICAgaXNOYU4obnVtYmVyKSB8fFxyXG4gICAgKHR5cGVvZiBudW1iZXIgIT09IFwibnVtYmVyXCIgJiYgdHlwZW9mIG51bWJlciAhPT0gXCJiaWdpbnRcIilcclxuICApXHJcbiAgICByZXR1cm4gXCJcIjtcclxuXHJcbiAgY29uc3QgbnVtU3RyID0gbnVtYmVyLnRvRml4ZWQoZnJhY3Rpb25EaWdpdHMpO1xyXG4gIGxldCBwaW5kZXggPSBudW1TdHIuaW5kZXhPZihcIi5cIiksXHJcbiAgICBmbnVtczogc3RyaW5nW10sXHJcbiAgICBkZWNpbWFsczogc3RyaW5nO1xyXG4gIGNvbnN0IHBhcnRzOiBzdHJpbmdbXSA9IFtdO1xyXG5cclxuICBpZiAocGluZGV4ID4gLTEpIHtcclxuICAgIGZudW1zID0gbnVtU3RyLnN1YnN0cmluZygwLCBwaW5kZXgpLnNwbGl0KFwiXCIpO1xyXG4gICAgZGVjaW1hbHMgPSBkc2VwICsgbnVtU3RyLnN1YnN0cihwaW5kZXggKyAxKTtcclxuICB9IGVsc2Uge1xyXG4gICAgZm51bXMgPSBudW1TdHIuc3BsaXQoXCJcIik7XHJcbiAgICBkZWNpbWFscyA9IFwiXCI7XHJcbiAgfVxyXG5cclxuICBkbyB7XHJcbiAgICBwYXJ0cy51bnNoaWZ0KGZudW1zLnNwbGljZSgtMywgMykuam9pbihcIlwiKSk7XHJcbiAgfSB3aGlsZSAoZm51bXMubGVuZ3RoKTtcclxuXHJcbiAgcmV0dXJuIHBhcnRzLmpvaW4odHNlcCkgKyBkZWNpbWFscztcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIG51bWJlcldpdGhaZXJvKG51bTogbnVtYmVyLCB6ZXJvTGVuOiBudW1iZXIpOiBzdHJpbmcge1xyXG4gIGlmIChpc05hTihudW0pKSByZXR1cm4gXCJcIjtcclxuXHJcbiAgbGV0IHplcm9zID0gXCJcIjtcclxuXHJcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCB6ZXJvTGVuOyBpKyspIHtcclxuICAgIHplcm9zICs9IFwiMFwiO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIGAke3plcm9zfSR7bnVtfWA7XHJcbn1cclxuIl19